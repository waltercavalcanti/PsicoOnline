@page "/grauparentesco"
@page "/grauparentesco/{id:int}"
@inject IGrauParentescoService GrauParentescoService

<h1>Grau de Parentesco</h1>

@if (Id == null)
{
	<PageTitle>Criar Grau de Parentesco</PageTitle>
	<h3>Criar Grau de Parentesco</h3>
}
else
{
	<PageTitle>Editar @grauParentesco.Descricao</PageTitle>
	<h3>Editar @grauParentesco.Descricao</h3>
}

<EditForm Model="grauParentesco" OnSubmit="SubmeterAsync">
	<div>
		<label for="descricao">Descrição</label>
		<InputText id="descricao" class="form-control" @bind-Value="grauParentesco.Descricao"></InputText>
	</div>
	<br />
	<button type="submit" class="btn btn-primary">@btnText</button>
	<button type="button" class="btn btn-danger" @onclick="DeleteGrauParentescoAsync">Excluir</button>
</EditForm>

@code {
	[Parameter]
	public int? Id { get; set; }

	string btnText = string.Empty;

	GrauParentescoModel grauParentesco = new GrauParentescoModel();

	protected override async Task OnInitializedAsync()
	{
		btnText = Id == null ? "Salvar" : "Atualizar";
	}

	protected override async Task OnParametersSetAsync()
	{
		if (Id != null)
		{
			grauParentesco = await GrauParentescoService.GetGrauParentescoByIdAsync((int)Id);
		}
	}

	async Task SubmeterAsync()
	{
		if (Id == null)
		{
			await GrauParentescoService.AddGrauParentescoAsync(grauParentesco);
		}
		else
		{
			await GrauParentescoService.UpdateGrauParentescoAsync(grauParentesco);
		}
	}

	async Task DeleteGrauParentescoAsync()
	{
		await GrauParentescoService.DeleteGrauParentescoAsync(grauParentesco.Id);
	}
}
