@page "/pacientes"
@inject IPacienteService PacienteService
@inject NavigationManager NavigationManager

<CabecalhoComponent Titulo="Pacientes" />

@if (PacienteService.Pacientes == null)
{
    <MudProgressCircular Color="Color.Primary" Indeterminate="true" />
}
else if (!PacienteService.Pacientes.Any())
{
    <p><em>Nenhum paciente cadastrado.</em></p>
}
else
{
    <MudTable Items="PacienteService.Pacientes" Dense="true" Hover="true" Filter="new Func<PacienteModel, bool>(Filtrar)">
        <ToolBarContent>
            <MudTextField Placeholder="Buscar" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Rounded.Search" IconSize="Size.Small"
                          Class="mt-0" Margin="Margin.Dense" Clearable="true" Immediate="true" @bind-Value="searchString" />
        </ToolBarContent>
        <HeaderContent>
            <MudTh><MudTableSortLabel InitialDirection="SortDirection.Ascending" SortBy="new Func<PacienteModel, object>(p => p.Nome)">Nome</MudTableSortLabel></MudTh>
            <MudTh>Data de Nascimento</MudTh>
            <MudTh>Idade</MudTh>
            <MudTh>Telefone</MudTh>
            <MudTh></MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Nome">@context.Nome</MudTd>
            <MudTd DataLabel="Data de Nascimento">@context.DataNascimento.Value.ToShortDateString()</MudTd>
            <MudTd DataLabel="Idade">@context.GetIdade() ano(s)</MudTd>
            <MudTd DataLabel="Telefone">@context.Telefone</MudTd>
            <MudTd DataLabel="Editar">
                <MudIconButton Variant="Variant.Outlined" Color="Color.Primary" Size="Size.Small" Icon="@Icons.Material.Rounded.Edit" title="Editar" OnClick="(() => EditarPaciente(context.Id))" />
            </MudTd>
        </RowTemplate>
        <PagerContent>
            <MudTablePager HorizontalAlignment="HorizontalAlignment.Left" RowsPerPageString="Linhas por página:" PageSizeOptions="pageSizes" />
        </PagerContent>
    </MudTable>
    <br />
    <MudButton Variant="Variant.Outlined" EndIcon="@Icons.Material.Filled.AddCircle" Color="Color.Primary" @onclick="AddPaciente">Adicionar</MudButton>
}

@code {
    private string searchString = "";
    private readonly int[] pageSizes = [5, 10, 15, 20, 25];

    protected override async Task OnInitializedAsync()
    {
        await PacienteService.GetAllPacientesAsync();
    }

    void EditarPaciente(int id)
    {
        NavigationManager.NavigateTo($"paciente/{id}");
    }

    void AddPaciente()
    {
        NavigationManager.NavigateTo("paciente");
    }

    private bool Filtrar(PacienteModel paciente) => Filtrar(paciente, searchString);

    private static bool Filtrar(PacienteModel paciente, string searchString)
    {
        if (string.IsNullOrWhiteSpace(searchString))
        {
            return true;
        }

        if (paciente.Nome.Contains(searchString, StringComparison.OrdinalIgnoreCase))
        {
            return true;
        }

        return false;
    }
}